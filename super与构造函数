public class Test {
	public static void main(String[] args){
		A a=new A();
		//结果显示如下
		//A
		//System.out.println("new A() over");
		B b=new B();
		//结果显示如下
		//A
		//B		
		//System.out.println("new B() over");
		C c=new C();
		//结果显示如下
		//A
		//B
		//C
		//System.out.println("new C() over");
  }
}
class A{
	A(){
		System.out.println("A");
	}
}
class B extends A{
	B(){
		//super();
		//子类的构造函数如果要调用super，必须把super放在函数的首位，不然或报错
		System.out.println("B");
		//super(); 如果把super放在指这个位置
		//compile time error :
		//Constructor call must be the first statement in a constructor
	}
}
class C extends B{
	C(){
		super();
		System.out.println("C");
	}
}


/*在Java中，有时还会遇到子类中的成员变量或方法与超类（有时也被称父类）中的成员变量或方法同名。
因为子类中的成员变量或方法名优先级高
所以子类中的同名成员变量或方法就隐藏了父类中的成员变量和方法，
但是如果我们想要使用超类中的这个成员变量或方法，就需要用到super。
这个super用法和在构造函数中使用super（）方法不太一样，使用格式如下：
super.父类成员变量
super.父类方法名（）
如果要使用超类的构造函数，则应当使用super（参数列表）的形式。
*/
